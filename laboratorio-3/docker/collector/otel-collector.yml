receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors:
  # Agrupar métricas antes de enviar para reduzir o uso da API.
  batch:
  # Removendo a label instance via transform:
  transform/delete_attribute:
    metric_statements:
      - context: resource
        statements:
        - delete_key(attributes, "service.instance.id")
        
  transform/insert_attribute:
    metric_statements:
      - context: datapoint
        statements:
        - set(attributes["team"], resource.attributes["team"]) where attributes["team"] == nil
        - set(attributes["version"], resource.attributes["version"]) where attributes["version"] == nil

exporters:
  debug:
    verbosity: detailed
  prometheusremotewrite:
    endpoint: "http://prometheus:9090/api/v1/write"
  otlp/tempo:
    endpoint: tempo:4317
    tls:
      insecure: true
  loki:
    endpoint: "http://loki:3100/loki/api/v1/push"

connectors:
  spanmetrics:
    metrics_expiration: 10m
    histogram:
      explicit:
        buckets: [125ms, 500ms, 2000ms, 8000ms]
    dimensions:
      - name: http.method
      - name: http.route
      - name: http.scheme
      - name: http.status_code
      - name: net.host.name
      - name: net.protocol.name
      - name: net.protocol.version
      - name: telemetry.sdk.language
      - name: telemetry.sdk.name
      - name: host.name
    exemplars:
      enabled: false
    dimensions_cache_size: 1000
    aggregation_temporality: "AGGREGATION_TEMPORALITY_CUMULATIVE"    
    events:
      enabled: false
    resource_metrics_key_attributes:
      - service.name

extensions:
  # Responsável por responder a chamadas de verificação de saúde em nome do coletor.
  health_check:

service:
  extensions: [health_check]
  pipelines:
    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: [prometheusremotewrite]
    # Segreguei o pipeline de métricas unicamente para validar a possibildiade de usar regras distintas e habilitar o debug apenas neste fluxo 
    metrics/spanmetrics:
      receivers: [spanmetrics]
      processors: [transform/delete_attribute, transform/insert_attribute, batch]
      exporters: [prometheusremotewrite, debug]
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp/tempo, spanmetrics]
    logs:
      receivers: [otlp]
      exporters: [loki]