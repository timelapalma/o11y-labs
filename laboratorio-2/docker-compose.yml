services:
  app:
    build:
      context: ../app/spring/build/
      dockerfile: Dockerfile
    image: spring-app:stable
    container_name: spring-app
    environment: 
      OTEL_SERVICE_NAME: "spring-app"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4318"
    ports:
      - "8080:8080"
    depends_on:
      - collector
      
  collector:
    container_name: collector
    image: otel/opentelemetry-collector-contrib:0.111.0
    restart: always
    command:
      - --config=/etc/otelcol-cont/otel-collector.yml
      - --feature-gates=connector.spanmetrics.legacyMetricNames # A partir da versão 0.109.0 foi adicionado o namespace traces.span.metrics nas métricas de span, essa flag reverte o comportamento
    volumes:
      - ./docker/collector/otel-collector.yml:/etc/otelcol-cont/otel-collector.yml
    ports:
      - "8889:8889" # Métricas expostas para raspagem
      - "13133:13133" # Extensao de health_check
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    restart: always
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  tempo:
    container_name: tempo
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yml
    ports:
      - "3200" # tempo
      - "4317" # otlp grpc  

  loki:
    container_name: loki
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"